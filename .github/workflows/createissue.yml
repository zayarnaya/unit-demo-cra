name: create-issue-on-push-tag
on:
    push:
        tags:
            - v[0-9]* 
permissions:
  contents: read
  issues: write 
jobs:
  create_issue:
    runs-on: ubuntu-latest
    steps:        
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: set tags
        id: tags
        run: |
          echo "CURR=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "PREV=$(git tag -l v[0-9]* --sort=-creatordate | head -n 1)" >> $GITHUB_OUTPUT
      - name: get tag info
        id: tag-info
        run: echo "TAG_CONTENT=$(git cat-file tag ${{ steps.tags.outputs.CURR }} | tail -n+6)" >> $GITHUB_OUTPUT
        # run: echo "TAG_MESSAGE=$(git tag -l --format='%(contents:subject)'${GITHUB_REF#refs/*/})" >> $GITHUB_OUTPUT
      - name: form changelog
        id: changelog
        run: echo "CHANGELOG=$(git log --pretty=format:"- %s" "${{ steps.tags.outputs.CURR }}..${{ steps.tags.outputs.PREV }}")" >> $GITHUB_OUTPUT
      - name: check changelog
        run: echo ${{ steps.changelog.outputs.CHANGELOG }}
      - name: find issue
        id: find_issue
        run: |
          TAG=$(git tag -l v[0-9]* --sort=-creatordate | head -n 1)
          ISSUE_TITLE="RELEASE ${TAG}"
          
          echo "ISSUE_ID=$(gh issue list --json number,title -q \
          ".[] | select(.title == \"${ISSUE_TITLE}\") | .number")" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: check issue ID
        id: check_id
        run: echo "ISSUE_EXISTS=${{ steps.tag-info.outputs.ISSUE_ID }}" >> $GITHUB_OUTPUT
      - name: create issue
        id: issue
        uses: dacbd/create-issue-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            token: ${{ env.GITHUB_TOKEN }}
            title: RELEASE ${{ github.ref_name }}
            labels: RELEASE
            body: |
              Author: ${{ github.actor }}
              Version: ${{ github.ref_name }}
              ${{ steps.tag-info.outputs.TAG_CONTENT }}
              ${{ steps.changelog.outputs.CHANGELOG }}
        # if: ! ${{ steps.find_issue.outputs.ISSUE_ID }}
    #   - name: update issue
    #     id: issue_upd
    #     if: ${{ steps.find_issue.outputs.ISSUE_ID }}
    #     run: $(gh issue comment ${{ steps.find_issue.outputs.ISSUE_ID }} --body ${{ steps.changelog.outputs.CHANGELOG }})

                            
                
                